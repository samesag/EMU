% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_points_lines.R
\name{join_points_lines}
\alias{join_points_lines}
\title{A function to identify the nearest coordinate in a line for a point, using sf objects.}
\usage{
join_points_lines(points, lines, crs_projected = NULL, crs_out = NULL)
}
\arguments{
\item{points}{The sf object containing points}

\item{lines}{The sf object containing lines}

\item{crs_projected}{The crs which will be used to find the neares points and calculete euclidean distances}

\item{crs_out}{The crs used for the coordinates at the final dataframe}
}
\value{
A dataframe containing the origin id, coordinates, and the destination coordinates as lon_dest and lat_dest
}
\description{
This function allows you to get the coordinates for the closests point in a line for an input point. This function
uses the snapPointsToLines from the sp package but accept sf as inputs. The process must be made in geographic
coordinates, so if the sf inputs are in lon/lat coordinates, they must be tranformed. If no crs is specified as
projected, the default crs is 3116. A crs for the output can also be choosen, by default, the result will be in crs
4326 (WGS84)
}
\examples{
destino_bici <- join_points_lines(direcciones, ciclorruta) \%>\%
select(id, lon_dest, lat_dest)
}
\keyword{nearest}
\keyword{point}
\keyword{st_join}
